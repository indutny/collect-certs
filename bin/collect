#!/usr/bin/env node
var collector = require('../');
var cluster = require('cluster');
var os = require('os');
var ProgressBar = require('progress');

var bar;

var options = {
  parallel: 1000,
  workers: 4,
  db: './certs'
};

if (cluster.isMaster) {
  var master = new collector.Master(options);
  var totalCount = 0;
  var snapshots = [];

  setInterval(function() {
    if (snapshots.length >= 16)
      snapshots.shift();
    snapshots.push(totalCount);
  }, 1000);

  function speed() {
    if (snapshots.length === 0)
      return 0;

    var interval = (snapshots.length - 1) * 1000;
    var count = snapshots[snapshots.length - 1] - snapshots[0];

    return (count / interval) * 1000;
  }

  master.getCount(function(err, count) {
    if (err)
      throw err;

    totalCount += count;
    master.start();
  });

  master.on('log', function(msg) {
    console.error(msg);
  });

  master.on('cert', function(cert) {
    totalCount++;
    if (bar && bar.curr >= bar.total) {
      bar.terminate();
      bar = null;
    }

    if (!bar) {
      bar = new ProgressBar(':bar', {
        total: 10000,
        width: 80,
        clear: true
      });
    }

    var end = totalCount - bar.curr + 10000;
    bar.fmt = ':bar (' + totalCount + '/' + end + ') speed: ' + speed();
    bar.tick();
  });
} else {
  var worker = new collector.Worker(options);
}
